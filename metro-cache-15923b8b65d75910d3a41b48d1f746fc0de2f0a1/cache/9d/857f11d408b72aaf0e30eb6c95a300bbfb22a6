__d(function (global, _require, module, exports, _dependencyMap) {
  Object.defineProperty(exports, "__esModule", {
    value: true
  });

  var _expoCore = _require(_dependencyMap[0], "expo-core");

  var _checkArgs = _require(_dependencyMap[1], "./utils/checkArgs");

  var _checkArgs2 = _interopRequireDefault(_checkArgs);

  var _checkInit = _require(_dependencyMap[2], "./utils/checkInit");

  var _checkInit2 = _interopRequireDefault(_checkInit);

  var _types = _require(_dependencyMap[3], "./utils/types");

  var types = _interopRequireWildcard(_types);

  function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }

  function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

  function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

  var StripeModule = _expoCore.NativeModulesProxy.StripeModule;

  var Stripe = function Stripe() {
    var _this = this;

    _classCallCheck(this, Stripe);

    this.stripeInitialized = false;

    this.setOptionsAsync = function () {
      var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
      (0, _checkArgs2.default)(types.setOptionsOptionsPropTypes, options, 'options', 'Stripe.setOptions');
      _this.stripeInitialized = true;
      return StripeModule.init(options);
    };

    this.deviceSupportsAndroidPayAsync = function () {
      return StripeModule.deviceSupportsAndroidPay();
    };

    this.canMakeAndroidPayPaymentsAsync = function () {
      return StripeModule.canMakeAndroidPayPayments();
    };

    this.paymentRequestWithAndroidPayAsync = function () {
      var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
      (0, _checkInit2.default)(_this);
      (0, _checkArgs2.default)(types.paymentRequestWithAndroidPayOptionsPropTypes, options, 'options', 'Stripe.paymentRequestWithAndroidPay');
      return StripeModule.paymentRequestWithAndroidPay(options);
    };

    this.paymentRequestWithCardFormAsync = function () {
      var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
      (0, _checkInit2.default)(_this);
      (0, _checkArgs2.default)(types.paymentRequestWithCardFormOptionsPropTypes, options, 'options', 'Stripe.paymentRequestWithCardForm');
      return StripeModule.paymentRequestWithCardForm(options);
    };

    this.createTokenWithCardAsync = function () {
      var params = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
      (0, _checkInit2.default)(_this);
      (0, _checkArgs2.default)(types.createTokenWithCardParamsPropTypes, params, 'params', 'Stripe.createTokenWithCard');
      return StripeModule.createTokenWithCard(params);
    };

    this.createTokenWithBankAccountAsync = function () {
      var params = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
      (0, _checkInit2.default)(_this);
      (0, _checkArgs2.default)(types.createTokenWithBankAccountParamsPropTypes, params, 'params', 'Stripe.createTokenWithBankAccount');
      return StripeModule.createTokenWithBankAccount(params);
    };

    this.createSourceWithParamsAsync = function () {
      var params = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
      (0, _checkInit2.default)(_this);
      (0, _checkArgs2.default)(types.createSourceWithParamsPropType, params, 'params', 'Stripe.createSourceWithParams');
      return StripeModule.createSourceWithParams(params);
    };
  };

  exports.default = new Stripe();
});