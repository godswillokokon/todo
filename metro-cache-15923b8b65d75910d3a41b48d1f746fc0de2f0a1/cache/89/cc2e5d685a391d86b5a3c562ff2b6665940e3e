__d(function (global, _require, module, exports, _dependencyMap) {
  Object.defineProperty(exports, "__esModule", {
    value: true
  });

  var _reactNative = _require(_dependencyMap[0], "react-native");

  var _expoCore = _require(_dependencyMap[1], "expo-core");

  var ExponentSegment = _expoCore.NativeModulesProxy.ExponentSegment;
  exports.default = {
    initialize: function initialize(options) {
      if (_reactNative.Platform.OS === 'android') {
        ExponentSegment.initializeAndroid(options.androidWriteKey);
      } else if (_reactNative.Platform.OS === 'ios') {
        ExponentSegment.initializeIOS(options.iosWriteKey);
      } else {
        throw new Error("Unable to initialize Segment on `" + _reactNative.Platform.OS + "`");
      }
    },
    identify: function identify(userId) {
      ExponentSegment.identify(userId);
    },
    identifyWithTraits: function identifyWithTraits(userId, traits) {
      ExponentSegment.identifyWithTraits(userId, traits);
    },
    group: function group(groupId) {
      ExponentSegment.group(groupId);
    },
    groupWithTraits: function groupWithTraits(groupId, traits) {
      ExponentSegment.groupWithTraits(groupId, traits);
    },
    reset: function reset() {
      ExponentSegment.reset();
    },
    track: function track(event) {
      ExponentSegment.track(event);
    },
    trackWithProperties: function trackWithProperties(event, properties) {
      ExponentSegment.trackWithProperties(event, properties);
    },
    screen: function screen(screenName) {
      ExponentSegment.screen(screenName);
    },
    screenWithProperties: function screenWithProperties(event, properties) {
      ExponentSegment.screenWithProperties(event, properties);
    },
    flush: function flush() {
      ExponentSegment.flush();
    }
  };
});