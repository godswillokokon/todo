__d(function (global, _require, module, exports, _dependencyMap) {
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.sendSMSAsync = sendSMSAsync;
  exports.isAvailableAsync = isAvailableAsync;

  var _expoCore = _require(_dependencyMap[0], "expo-core");

  var ExpoSMS = _expoCore.NativeModulesProxy.ExpoSMS;

  function sendSMSAsync(addresses, message) {
    var finalAddresses;
    return regeneratorRuntime.async(function sendSMSAsync$(_context) {
      while (1) {
        switch (_context.prev = _context.next) {
          case 0:
            finalAddresses = Array.isArray(addresses) ? addresses : [addresses];
            return _context.abrupt("return", ExpoSMS.sendSMSAsync(finalAddresses, message));

          case 2:
          case "end":
            return _context.stop();
        }
      }
    }, null, this);
  }

  function isAvailableAsync() {
    return regeneratorRuntime.async(function isAvailableAsync$(_context2) {
      while (1) {
        switch (_context2.prev = _context2.next) {
          case 0:
            return _context2.abrupt("return", ExpoSMS.isAvailableAsync());

          case 1:
          case "end":
            return _context2.stop();
        }
      }
    }, null, this);
  }
});