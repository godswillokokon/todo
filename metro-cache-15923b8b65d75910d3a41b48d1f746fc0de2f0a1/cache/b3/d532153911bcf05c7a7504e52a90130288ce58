__d(function (global, _require, module, exports, _dependencyMap) {
  Object.defineProperty(exports, "__esModule", {
    value: true
  });

  var _react2 = _require(_dependencyMap[0], "react");

  var _react3 = _interopRequireDefault(_react2);

  var _index = _require(_dependencyMap[1], "./../../../react-transform-hmr/lib/index.js");

  var _index2 = _interopRequireDefault(_index);

  var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

  var _SplashScreen = _require(_dependencyMap[2], "./SplashScreen");

  var SplashScreen = _interopRequireWildcard(_SplashScreen);

  function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }

  function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

  function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

  function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

  function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

  var _components = {
    AppLoading: {
      displayName: "AppLoading"
    }
  };

  var _reactTransformHmrLibIndexJs2 = (0, _index2.default)({
    filename: "/home/og/Documents/react-native/todo/node_modules/expo/src/launch/AppLoadingNativeWrapper.js",
    components: _components,
    locals: [module],
    imports: [_react3.default]
  });

  function _wrapComponent(id) {
    return function (Component) {
      return _reactTransformHmrLibIndexJs2(Component, id);
    };
  }

  var AppLoading = _wrapComponent("AppLoading")(function (_React$Component) {
    _inherits(AppLoading, _React$Component);

    function AppLoading(props) {
      _classCallCheck(this, AppLoading);

      var _this = _possibleConstructorReturn(this, (AppLoading.__proto__ || Object.getPrototypeOf(AppLoading)).call(this, props));

      SplashScreen.preventAutoHide();
      return _this;
    }

    _createClass(AppLoading, [{
      key: "componentWillUnmount",
      value: function componentWillUnmount() {
        if (this.props.autoHideSplash === undefined || this.props.autoHideSplash) {
          if (global.__E2E__) {
            SplashScreen.hide();
          } else {
            setTimeout(function () {
              SplashScreen.hide();
            }, 200);
          }
        }
      }
    }, {
      key: "render",
      value: function render() {
        return null;
      }
    }]);

    return AppLoading;
  }(_react3.default.Component));

  exports.default = AppLoading;
});